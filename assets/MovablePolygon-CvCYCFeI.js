import{C as i,V as e,M as n,A as l}from"./GameComponent.vue_vue_type_style_index_0_lang-YRpTnnfg.js";import{P as a}from"./Polygon-BQhVNHlV.js";class h extends a{isActivator=!1;isCollsioniActive=!0;OnObjectEnter(s){}getCenterPoint(){return this.getMidAvgPoint()}castObjectOntoNormal(s){return i.getMinMaxOfPointsOnAxis(this.getTransformedPoints(),s)}getNormalsForCollision(){const s=i.getNormalsOfConnectedPoints(this.getTransformedPoints());return s.map(t=>t.x<0&&t.y<0?new e(Math.abs(t.x),Math.abs(t.y)):t.x<0?new e(-t.x,-t.y):t),s}}class d extends h{centerOrigin(){const s=new e;this._points.forEach(o=>s.add(o));const t=new e(s.x/this._points.length,s.y/this._points.length);this._points.forEach(o=>{o.sub(t)}),this.transformation.translate(t.x,t.y)}resetTransoform(){this.transformation=new n(1,0,0,0,1,0,0,0,1)}_originalColor="white";constructor(s,t="White"){super(s,t),this._originalColor=t}update(s){if(this.isPressed===!0){const t=this.game?._MouseController.getMouseDelta();this.move(this.isPressed?t||new e(0,0):new e(0,0)),this.rotate(this.game?this.game?._MouseController.getScrollDelta():0)}}onPress(){}onUnpress(){}isPressed=!1;onClick(){this._color="yellow",new Promise(s=>setTimeout(s,200)).then(()=>{this._color=this._originalColor})}mouseOnState=!1;onHover(){this._color="red"}onUnHover(){this._color=this._originalColor}isHoveredOver=!1;isMouseOn(s){const t=this.getTransformedPoints();return l.isPointWithinShape(s,t)}draw(s){this.isHoveredOver&&(this._color="red"),this.isPressed&&(this._color="green"),super.draw(s),this._color=this._originalColor}}export{d as M};
