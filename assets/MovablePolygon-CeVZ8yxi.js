import{C as r,V as e,M as n,A as a}from"./GameComponent.vue_vue_type_style_index_0_lang-C4RZRmDn.js";import{P as l}from"./Polygon-C1FO5tZz.js";class h extends l{getCenterPoint(){return this.getMidAvgPoint()}castObjectOntoNormal(t){return r.getMinMaxOfPointsOnAxis(this.getTransformedPoints(),t)}getNormalsForCollision(){const t=r.getNormalsOfConnectedPoints(this.getTransformedPoints());return t.map(s=>s.x<0&&s.y<0?new e(Math.abs(s.x),Math.abs(s.y)):s.x<0?new e(-s.x,-s.y):s),t}}class m extends h{centerOrigin(){const t=new e;this._points.forEach(o=>t.add(o));const s=new e(t.x/this._points.length,t.y/this._points.length);this._points.forEach(o=>{o.sub(s)}),this.transformation.translate(s.x,s.y)}resetTransoform(){this.transformation=new n(1,0,0,0,1,0,0,0,1)}_originalColor="white";constructor(t,s="White"){super(t,s),this._originalColor=s}update(t){if(this.isPressed===!0){const s=this.game?._MouseController.getMouseDelta();this.move(this.isPressed?s||new e(0,0):new e(0,0)),this.rotate(this.game?this.game?._MouseController.getScrollDelta():0)}}onPress(){}onUnpress(){}isPressed=!1;onClick(){this._color="yellow",new Promise(t=>setTimeout(t,200)).then(()=>{this._color=this._originalColor})}mouseOnState=!1;onHover(){this._color="red"}onUnHover(){this._color=this._originalColor}isHoveredOver=!1;isMouseOn(t){const s=this.getTransformedPoints();return a.isPointWithinShape(t,s)}draw(t){this.isHoveredOver&&(this._color="red"),this.isPressed&&(this._color="green"),super.draw(t),this._color=this._originalColor}}export{m as M};
