import{d as mt,r as _t,e as xt,w as dt,c as nt,f as Mt,o as ht}from"./index-8LjSHwpe.js";class zt{game;constructor(){}}/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const ct="169",Q=2e3,rt=2001;function P(x,t,s){return Math.max(t,Math.min(s,x))}class C{constructor(t=0,s=0){C.prototype.isVector2=!0,this.x=t,this.y=s}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,s){return this.x=t,this.y=s,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,s){switch(t){case 0:this.x=s;break;case 1:this.y=s;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,s){return this.x=t.x+s.x,this.y=t.y+s.y,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,s){return this.x=t.x-s.x,this.y=t.y-s.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const s=this.x,e=this.y,i=t.elements;return this.x=i[0]*s+i[3]*e+i[6],this.y=i[1]*s+i[4]*e+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,s){return this.x=Math.max(t.x,Math.min(s.x,this.x)),this.y=Math.max(t.y,Math.min(s.y,this.y)),this}clampScalar(t,s){return this.x=Math.max(t,Math.min(s,this.x)),this.y=Math.max(t,Math.min(s,this.y)),this}clampLength(t,s){const e=this.length();return this.divideScalar(e||1).multiplyScalar(Math.max(t,Math.min(s,e)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const s=Math.sqrt(this.lengthSq()*t.lengthSq());if(s===0)return Math.PI/2;const e=this.dot(t)/s;return Math.acos(P(e,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const s=this.x-t.x,e=this.y-t.y;return s*s+e*e}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,s){return this.x+=(t.x-this.x)*s,this.y+=(t.y-this.y)*s,this}lerpVectors(t,s,e){return this.x=t.x+(s.x-t.x)*e,this.y=t.y+(s.y-t.y)*e,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,s=0){return this.x=t[s],this.y=t[s+1],this}toArray(t=[],s=0){return t[s]=this.x,t[s+1]=this.y,t}fromBufferAttribute(t,s){return this.x=t.getX(s),this.y=t.getY(s),this}rotateAround(t,s){const e=Math.cos(s),i=Math.sin(s),n=this.x-t.x,h=this.y-t.y;return this.x=n*e-h*i+t.x,this.y=n*i+h*e+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class it{constructor(t,s,e,i,n,h,a,r,o){it.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,s,e,i,n,h,a,r,o)}set(t,s,e,i,n,h,a,r,o){const c=this.elements;return c[0]=t,c[1]=i,c[2]=a,c[3]=s,c[4]=n,c[5]=r,c[6]=e,c[7]=h,c[8]=o,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const s=this.elements,e=t.elements;return s[0]=e[0],s[1]=e[1],s[2]=e[2],s[3]=e[3],s[4]=e[4],s[5]=e[5],s[6]=e[6],s[7]=e[7],s[8]=e[8],this}extractBasis(t,s,e){return t.setFromMatrix3Column(this,0),s.setFromMatrix3Column(this,1),e.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const s=t.elements;return this.set(s[0],s[4],s[8],s[1],s[5],s[9],s[2],s[6],s[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,s){const e=t.elements,i=s.elements,n=this.elements,h=e[0],a=e[3],r=e[6],o=e[1],c=e[4],y=e[7],l=e[2],u=e[5],m=e[8],_=i[0],M=i[3],d=i[6],f=i[1],g=i[4],w=i[7],p=i[2],b=i[5],z=i[8];return n[0]=h*_+a*f+r*p,n[3]=h*M+a*g+r*b,n[6]=h*d+a*w+r*z,n[1]=o*_+c*f+y*p,n[4]=o*M+c*g+y*b,n[7]=o*d+c*w+y*z,n[2]=l*_+u*f+m*p,n[5]=l*M+u*g+m*b,n[8]=l*d+u*w+m*z,this}multiplyScalar(t){const s=this.elements;return s[0]*=t,s[3]*=t,s[6]*=t,s[1]*=t,s[4]*=t,s[7]*=t,s[2]*=t,s[5]*=t,s[8]*=t,this}determinant(){const t=this.elements,s=t[0],e=t[1],i=t[2],n=t[3],h=t[4],a=t[5],r=t[6],o=t[7],c=t[8];return s*h*c-s*a*o-e*n*c+e*a*r+i*n*o-i*h*r}invert(){const t=this.elements,s=t[0],e=t[1],i=t[2],n=t[3],h=t[4],a=t[5],r=t[6],o=t[7],c=t[8],y=c*h-a*o,l=a*r-c*n,u=o*n-h*r,m=s*y+e*l+i*u;if(m===0)return this.set(0,0,0,0,0,0,0,0,0);const _=1/m;return t[0]=y*_,t[1]=(i*o-c*e)*_,t[2]=(a*e-i*h)*_,t[3]=l*_,t[4]=(c*s-i*r)*_,t[5]=(i*n-a*s)*_,t[6]=u*_,t[7]=(e*r-o*s)*_,t[8]=(h*s-e*n)*_,this}transpose(){let t;const s=this.elements;return t=s[1],s[1]=s[3],s[3]=t,t=s[2],s[2]=s[6],s[6]=t,t=s[5],s[5]=s[7],s[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const s=this.elements;return t[0]=s[0],t[1]=s[3],t[2]=s[6],t[3]=s[1],t[4]=s[4],t[5]=s[7],t[6]=s[2],t[7]=s[5],t[8]=s[8],this}setUvTransform(t,s,e,i,n,h,a){const r=Math.cos(n),o=Math.sin(n);return this.set(e*r,e*o,-e*(r*h+o*a)+h+t,-i*o,i*r,-i*(-o*h+r*a)+a+s,0,0,1),this}scale(t,s){return this.premultiply($.makeScale(t,s)),this}rotate(t){return this.premultiply($.makeRotation(-t)),this}translate(t,s){return this.premultiply($.makeTranslation(t,s)),this}makeTranslation(t,s){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,s,0,0,1),this}makeRotation(t){const s=Math.cos(t),e=Math.sin(t);return this.set(s,-e,0,e,s,0,0,0,1),this}makeScale(t,s){return this.set(t,0,0,0,s,0,0,0,1),this}equals(t){const s=this.elements,e=t.elements;for(let i=0;i<9;i++)if(s[i]!==e[i])return!1;return!0}fromArray(t,s=0){for(let e=0;e<9;e++)this.elements[e]=t[e+s];return this}toArray(t=[],s=0){const e=this.elements;return t[s]=e[0],t[s+1]=e[1],t[s+2]=e[2],t[s+3]=e[3],t[s+4]=e[4],t[s+5]=e[5],t[s+6]=e[6],t[s+7]=e[7],t[s+8]=e[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const $=new it;class ut{constructor(t=0,s=0,e=0,i=1){this.isQuaternion=!0,this._x=t,this._y=s,this._z=e,this._w=i}static slerpFlat(t,s,e,i,n,h,a){let r=e[i+0],o=e[i+1],c=e[i+2],y=e[i+3];const l=n[h+0],u=n[h+1],m=n[h+2],_=n[h+3];if(a===0){t[s+0]=r,t[s+1]=o,t[s+2]=c,t[s+3]=y;return}if(a===1){t[s+0]=l,t[s+1]=u,t[s+2]=m,t[s+3]=_;return}if(y!==_||r!==l||o!==u||c!==m){let M=1-a;const d=r*l+o*u+c*m+y*_,f=d>=0?1:-1,g=1-d*d;if(g>Number.EPSILON){const p=Math.sqrt(g),b=Math.atan2(p,d*f);M=Math.sin(M*b)/p,a=Math.sin(a*b)/p}const w=a*f;if(r=r*M+l*w,o=o*M+u*w,c=c*M+m*w,y=y*M+_*w,M===1-a){const p=1/Math.sqrt(r*r+o*o+c*c+y*y);r*=p,o*=p,c*=p,y*=p}}t[s]=r,t[s+1]=o,t[s+2]=c,t[s+3]=y}static multiplyQuaternionsFlat(t,s,e,i,n,h){const a=e[i],r=e[i+1],o=e[i+2],c=e[i+3],y=n[h],l=n[h+1],u=n[h+2],m=n[h+3];return t[s]=a*m+c*y+r*u-o*l,t[s+1]=r*m+c*l+o*y-a*u,t[s+2]=o*m+c*u+a*l-r*y,t[s+3]=c*m-a*y-r*l-o*u,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,s,e,i){return this._x=t,this._y=s,this._z=e,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,s=!0){const e=t._x,i=t._y,n=t._z,h=t._order,a=Math.cos,r=Math.sin,o=a(e/2),c=a(i/2),y=a(n/2),l=r(e/2),u=r(i/2),m=r(n/2);switch(h){case"XYZ":this._x=l*c*y+o*u*m,this._y=o*u*y-l*c*m,this._z=o*c*m+l*u*y,this._w=o*c*y-l*u*m;break;case"YXZ":this._x=l*c*y+o*u*m,this._y=o*u*y-l*c*m,this._z=o*c*m-l*u*y,this._w=o*c*y+l*u*m;break;case"ZXY":this._x=l*c*y-o*u*m,this._y=o*u*y+l*c*m,this._z=o*c*m+l*u*y,this._w=o*c*y-l*u*m;break;case"ZYX":this._x=l*c*y-o*u*m,this._y=o*u*y+l*c*m,this._z=o*c*m-l*u*y,this._w=o*c*y+l*u*m;break;case"YZX":this._x=l*c*y+o*u*m,this._y=o*u*y+l*c*m,this._z=o*c*m-l*u*y,this._w=o*c*y-l*u*m;break;case"XZY":this._x=l*c*y-o*u*m,this._y=o*u*y-l*c*m,this._z=o*c*m+l*u*y,this._w=o*c*y+l*u*m;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+h)}return s===!0&&this._onChangeCallback(),this}setFromAxisAngle(t,s){const e=s/2,i=Math.sin(e);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(e),this._onChangeCallback(),this}setFromRotationMatrix(t){const s=t.elements,e=s[0],i=s[4],n=s[8],h=s[1],a=s[5],r=s[9],o=s[2],c=s[6],y=s[10],l=e+a+y;if(l>0){const u=.5/Math.sqrt(l+1);this._w=.25/u,this._x=(c-r)*u,this._y=(n-o)*u,this._z=(h-i)*u}else if(e>a&&e>y){const u=2*Math.sqrt(1+e-a-y);this._w=(c-r)/u,this._x=.25*u,this._y=(i+h)/u,this._z=(n+o)/u}else if(a>y){const u=2*Math.sqrt(1+a-e-y);this._w=(n-o)/u,this._x=(i+h)/u,this._y=.25*u,this._z=(r+c)/u}else{const u=2*Math.sqrt(1+y-e-a);this._w=(h-i)/u,this._x=(n+o)/u,this._y=(r+c)/u,this._z=.25*u}return this._onChangeCallback(),this}setFromUnitVectors(t,s){let e=t.dot(s)+1;return e<Number.EPSILON?(e=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=e):(this._x=0,this._y=-t.z,this._z=t.y,this._w=e)):(this._x=t.y*s.z-t.z*s.y,this._y=t.z*s.x-t.x*s.z,this._z=t.x*s.y-t.y*s.x,this._w=e),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(P(this.dot(t),-1,1)))}rotateTowards(t,s){const e=this.angleTo(t);if(e===0)return this;const i=Math.min(1,s/e);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,s){const e=t._x,i=t._y,n=t._z,h=t._w,a=s._x,r=s._y,o=s._z,c=s._w;return this._x=e*c+h*a+i*o-n*r,this._y=i*c+h*r+n*a-e*o,this._z=n*c+h*o+e*r-i*a,this._w=h*c-e*a-i*r-n*o,this._onChangeCallback(),this}slerp(t,s){if(s===0)return this;if(s===1)return this.copy(t);const e=this._x,i=this._y,n=this._z,h=this._w;let a=h*t._w+e*t._x+i*t._y+n*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=h,this._x=e,this._y=i,this._z=n,this;const r=1-a*a;if(r<=Number.EPSILON){const u=1-s;return this._w=u*h+s*this._w,this._x=u*e+s*this._x,this._y=u*i+s*this._y,this._z=u*n+s*this._z,this.normalize(),this}const o=Math.sqrt(r),c=Math.atan2(o,a),y=Math.sin((1-s)*c)/o,l=Math.sin(s*c)/o;return this._w=h*y+this._w*l,this._x=e*y+this._x*l,this._y=i*y+this._y*l,this._z=n*y+this._z*l,this._onChangeCallback(),this}slerpQuaternions(t,s,e){return this.copy(t).slerp(s,e)}random(){const t=2*Math.PI*Math.random(),s=2*Math.PI*Math.random(),e=Math.random(),i=Math.sqrt(1-e),n=Math.sqrt(e);return this.set(i*Math.sin(t),i*Math.cos(t),n*Math.sin(s),n*Math.cos(s))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,s=0){return this._x=t[s],this._y=t[s+1],this._z=t[s+2],this._w=t[s+3],this._onChangeCallback(),this}toArray(t=[],s=0){return t[s]=this._x,t[s+1]=this._y,t[s+2]=this._z,t[s+3]=this._w,t}fromBufferAttribute(t,s){return this._x=t.getX(s),this._y=t.getY(s),this._z=t.getZ(s),this._w=t.getW(s),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class E{constructor(t=0,s=0,e=0){E.prototype.isVector3=!0,this.x=t,this.y=s,this.z=e}set(t,s,e){return e===void 0&&(e=this.z),this.x=t,this.y=s,this.z=e,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,s){switch(t){case 0:this.x=s;break;case 1:this.y=s;break;case 2:this.z=s;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,s){return this.x=t.x+s.x,this.y=t.y+s.y,this.z=t.z+s.z,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this.z+=t.z*s,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,s){return this.x=t.x-s.x,this.y=t.y-s.y,this.z=t.z-s.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,s){return this.x=t.x*s.x,this.y=t.y*s.y,this.z=t.z*s.z,this}applyEuler(t){return this.applyQuaternion(ot.setFromEuler(t))}applyAxisAngle(t,s){return this.applyQuaternion(ot.setFromAxisAngle(t,s))}applyMatrix3(t){const s=this.x,e=this.y,i=this.z,n=t.elements;return this.x=n[0]*s+n[3]*e+n[6]*i,this.y=n[1]*s+n[4]*e+n[7]*i,this.z=n[2]*s+n[5]*e+n[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const s=this.x,e=this.y,i=this.z,n=t.elements,h=1/(n[3]*s+n[7]*e+n[11]*i+n[15]);return this.x=(n[0]*s+n[4]*e+n[8]*i+n[12])*h,this.y=(n[1]*s+n[5]*e+n[9]*i+n[13])*h,this.z=(n[2]*s+n[6]*e+n[10]*i+n[14])*h,this}applyQuaternion(t){const s=this.x,e=this.y,i=this.z,n=t.x,h=t.y,a=t.z,r=t.w,o=2*(h*i-a*e),c=2*(a*s-n*i),y=2*(n*e-h*s);return this.x=s+r*o+h*y-a*c,this.y=e+r*c+a*o-n*y,this.z=i+r*y+n*c-h*o,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const s=this.x,e=this.y,i=this.z,n=t.elements;return this.x=n[0]*s+n[4]*e+n[8]*i,this.y=n[1]*s+n[5]*e+n[9]*i,this.z=n[2]*s+n[6]*e+n[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,s){return this.x=Math.max(t.x,Math.min(s.x,this.x)),this.y=Math.max(t.y,Math.min(s.y,this.y)),this.z=Math.max(t.z,Math.min(s.z,this.z)),this}clampScalar(t,s){return this.x=Math.max(t,Math.min(s,this.x)),this.y=Math.max(t,Math.min(s,this.y)),this.z=Math.max(t,Math.min(s,this.z)),this}clampLength(t,s){const e=this.length();return this.divideScalar(e||1).multiplyScalar(Math.max(t,Math.min(s,e)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,s){return this.x+=(t.x-this.x)*s,this.y+=(t.y-this.y)*s,this.z+=(t.z-this.z)*s,this}lerpVectors(t,s,e){return this.x=t.x+(s.x-t.x)*e,this.y=t.y+(s.y-t.y)*e,this.z=t.z+(s.z-t.z)*e,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,s){const e=t.x,i=t.y,n=t.z,h=s.x,a=s.y,r=s.z;return this.x=i*r-n*a,this.y=n*h-e*r,this.z=e*a-i*h,this}projectOnVector(t){const s=t.lengthSq();if(s===0)return this.set(0,0,0);const e=t.dot(this)/s;return this.copy(t).multiplyScalar(e)}projectOnPlane(t){return K.copy(this).projectOnVector(t),this.sub(K)}reflect(t){return this.sub(K.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const s=Math.sqrt(this.lengthSq()*t.lengthSq());if(s===0)return Math.PI/2;const e=this.dot(t)/s;return Math.acos(P(e,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const s=this.x-t.x,e=this.y-t.y,i=this.z-t.z;return s*s+e*e+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,s,e){const i=Math.sin(s)*t;return this.x=i*Math.sin(e),this.y=Math.cos(s)*t,this.z=i*Math.cos(e),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,s,e){return this.x=t*Math.sin(s),this.y=e,this.z=t*Math.cos(s),this}setFromMatrixPosition(t){const s=t.elements;return this.x=s[12],this.y=s[13],this.z=s[14],this}setFromMatrixScale(t){const s=this.setFromMatrixColumn(t,0).length(),e=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=s,this.y=e,this.z=i,this}setFromMatrixColumn(t,s){return this.fromArray(t.elements,s*4)}setFromMatrix3Column(t,s){return this.fromArray(t.elements,s*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,s=0){return this.x=t[s],this.y=t[s+1],this.z=t[s+2],this}toArray(t=[],s=0){return t[s]=this.x,t[s+1]=this.y,t[s+2]=this.z,t}fromBufferAttribute(t,s){return this.x=t.getX(s),this.y=t.getY(s),this.z=t.getZ(s),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,s=Math.random()*2-1,e=Math.sqrt(1-s*s);return this.x=e*Math.cos(t),this.y=s,this.z=e*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const K=new E,ot=new ut;class T{constructor(t,s,e,i,n,h,a,r,o,c,y,l,u,m,_,M){T.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,s,e,i,n,h,a,r,o,c,y,l,u,m,_,M)}set(t,s,e,i,n,h,a,r,o,c,y,l,u,m,_,M){const d=this.elements;return d[0]=t,d[4]=s,d[8]=e,d[12]=i,d[1]=n,d[5]=h,d[9]=a,d[13]=r,d[2]=o,d[6]=c,d[10]=y,d[14]=l,d[3]=u,d[7]=m,d[11]=_,d[15]=M,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new T().fromArray(this.elements)}copy(t){const s=this.elements,e=t.elements;return s[0]=e[0],s[1]=e[1],s[2]=e[2],s[3]=e[3],s[4]=e[4],s[5]=e[5],s[6]=e[6],s[7]=e[7],s[8]=e[8],s[9]=e[9],s[10]=e[10],s[11]=e[11],s[12]=e[12],s[13]=e[13],s[14]=e[14],s[15]=e[15],this}copyPosition(t){const s=this.elements,e=t.elements;return s[12]=e[12],s[13]=e[13],s[14]=e[14],this}setFromMatrix3(t){const s=t.elements;return this.set(s[0],s[3],s[6],0,s[1],s[4],s[7],0,s[2],s[5],s[8],0,0,0,0,1),this}extractBasis(t,s,e){return t.setFromMatrixColumn(this,0),s.setFromMatrixColumn(this,1),e.setFromMatrixColumn(this,2),this}makeBasis(t,s,e){return this.set(t.x,s.x,e.x,0,t.y,s.y,e.y,0,t.z,s.z,e.z,0,0,0,0,1),this}extractRotation(t){const s=this.elements,e=t.elements,i=1/v.setFromMatrixColumn(t,0).length(),n=1/v.setFromMatrixColumn(t,1).length(),h=1/v.setFromMatrixColumn(t,2).length();return s[0]=e[0]*i,s[1]=e[1]*i,s[2]=e[2]*i,s[3]=0,s[4]=e[4]*n,s[5]=e[5]*n,s[6]=e[6]*n,s[7]=0,s[8]=e[8]*h,s[9]=e[9]*h,s[10]=e[10]*h,s[11]=0,s[12]=0,s[13]=0,s[14]=0,s[15]=1,this}makeRotationFromEuler(t){const s=this.elements,e=t.x,i=t.y,n=t.z,h=Math.cos(e),a=Math.sin(e),r=Math.cos(i),o=Math.sin(i),c=Math.cos(n),y=Math.sin(n);if(t.order==="XYZ"){const l=h*c,u=h*y,m=a*c,_=a*y;s[0]=r*c,s[4]=-r*y,s[8]=o,s[1]=u+m*o,s[5]=l-_*o,s[9]=-a*r,s[2]=_-l*o,s[6]=m+u*o,s[10]=h*r}else if(t.order==="YXZ"){const l=r*c,u=r*y,m=o*c,_=o*y;s[0]=l+_*a,s[4]=m*a-u,s[8]=h*o,s[1]=h*y,s[5]=h*c,s[9]=-a,s[2]=u*a-m,s[6]=_+l*a,s[10]=h*r}else if(t.order==="ZXY"){const l=r*c,u=r*y,m=o*c,_=o*y;s[0]=l-_*a,s[4]=-h*y,s[8]=m+u*a,s[1]=u+m*a,s[5]=h*c,s[9]=_-l*a,s[2]=-h*o,s[6]=a,s[10]=h*r}else if(t.order==="ZYX"){const l=h*c,u=h*y,m=a*c,_=a*y;s[0]=r*c,s[4]=m*o-u,s[8]=l*o+_,s[1]=r*y,s[5]=_*o+l,s[9]=u*o-m,s[2]=-o,s[6]=a*r,s[10]=h*r}else if(t.order==="YZX"){const l=h*r,u=h*o,m=a*r,_=a*o;s[0]=r*c,s[4]=_-l*y,s[8]=m*y+u,s[1]=y,s[5]=h*c,s[9]=-a*c,s[2]=-o*c,s[6]=u*y+m,s[10]=l-_*y}else if(t.order==="XZY"){const l=h*r,u=h*o,m=a*r,_=a*o;s[0]=r*c,s[4]=-y,s[8]=o*c,s[1]=l*y+_,s[5]=h*c,s[9]=u*y-m,s[2]=m*y-u,s[6]=a*c,s[10]=_*y+l}return s[3]=0,s[7]=0,s[11]=0,s[12]=0,s[13]=0,s[14]=0,s[15]=1,this}makeRotationFromQuaternion(t){return this.compose(pt,t,ft)}lookAt(t,s,e){const i=this.elements;return S.subVectors(t,s),S.lengthSq()===0&&(S.z=1),S.normalize(),O.crossVectors(e,S),O.lengthSq()===0&&(Math.abs(e.z)===1?S.x+=1e-4:S.z+=1e-4,S.normalize(),O.crossVectors(e,S)),O.normalize(),B.crossVectors(S,O),i[0]=O.x,i[4]=B.x,i[8]=S.x,i[1]=O.y,i[5]=B.y,i[9]=S.y,i[2]=O.z,i[6]=B.z,i[10]=S.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,s){const e=t.elements,i=s.elements,n=this.elements,h=e[0],a=e[4],r=e[8],o=e[12],c=e[1],y=e[5],l=e[9],u=e[13],m=e[2],_=e[6],M=e[10],d=e[14],f=e[3],g=e[7],w=e[11],p=e[15],b=i[0],z=i[4],F=i[8],L=i[12],V=i[1],q=i[5],N=i[9],D=i[13],X=i[2],j=i[6],Y=i[10],I=i[14],Z=i[3],U=i[7],W=i[11],H=i[15];return n[0]=h*b+a*V+r*X+o*Z,n[4]=h*z+a*q+r*j+o*U,n[8]=h*F+a*N+r*Y+o*W,n[12]=h*L+a*D+r*I+o*H,n[1]=c*b+y*V+l*X+u*Z,n[5]=c*z+y*q+l*j+u*U,n[9]=c*F+y*N+l*Y+u*W,n[13]=c*L+y*D+l*I+u*H,n[2]=m*b+_*V+M*X+d*Z,n[6]=m*z+_*q+M*j+d*U,n[10]=m*F+_*N+M*Y+d*W,n[14]=m*L+_*D+M*I+d*H,n[3]=f*b+g*V+w*X+p*Z,n[7]=f*z+g*q+w*j+p*U,n[11]=f*F+g*N+w*Y+p*W,n[15]=f*L+g*D+w*I+p*H,this}multiplyScalar(t){const s=this.elements;return s[0]*=t,s[4]*=t,s[8]*=t,s[12]*=t,s[1]*=t,s[5]*=t,s[9]*=t,s[13]*=t,s[2]*=t,s[6]*=t,s[10]*=t,s[14]*=t,s[3]*=t,s[7]*=t,s[11]*=t,s[15]*=t,this}determinant(){const t=this.elements,s=t[0],e=t[4],i=t[8],n=t[12],h=t[1],a=t[5],r=t[9],o=t[13],c=t[2],y=t[6],l=t[10],u=t[14],m=t[3],_=t[7],M=t[11],d=t[15];return m*(+n*r*y-i*o*y-n*a*l+e*o*l+i*a*u-e*r*u)+_*(+s*r*u-s*o*l+n*h*l-i*h*u+i*o*c-n*r*c)+M*(+s*o*y-s*a*u-n*h*y+e*h*u+n*a*c-e*o*c)+d*(-i*a*c-s*r*y+s*a*l+i*h*y-e*h*l+e*r*c)}transpose(){const t=this.elements;let s;return s=t[1],t[1]=t[4],t[4]=s,s=t[2],t[2]=t[8],t[8]=s,s=t[6],t[6]=t[9],t[9]=s,s=t[3],t[3]=t[12],t[12]=s,s=t[7],t[7]=t[13],t[13]=s,s=t[11],t[11]=t[14],t[14]=s,this}setPosition(t,s,e){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=s,i[14]=e),this}invert(){const t=this.elements,s=t[0],e=t[1],i=t[2],n=t[3],h=t[4],a=t[5],r=t[6],o=t[7],c=t[8],y=t[9],l=t[10],u=t[11],m=t[12],_=t[13],M=t[14],d=t[15],f=y*M*o-_*l*o+_*r*u-a*M*u-y*r*d+a*l*d,g=m*l*o-c*M*o-m*r*u+h*M*u+c*r*d-h*l*d,w=c*_*o-m*y*o+m*a*u-h*_*u-c*a*d+h*y*d,p=m*y*r-c*_*r-m*a*l+h*_*l+c*a*M-h*y*M,b=s*f+e*g+i*w+n*p;if(b===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const z=1/b;return t[0]=f*z,t[1]=(_*l*n-y*M*n-_*i*u+e*M*u+y*i*d-e*l*d)*z,t[2]=(a*M*n-_*r*n+_*i*o-e*M*o-a*i*d+e*r*d)*z,t[3]=(y*r*n-a*l*n-y*i*o+e*l*o+a*i*u-e*r*u)*z,t[4]=g*z,t[5]=(c*M*n-m*l*n+m*i*u-s*M*u-c*i*d+s*l*d)*z,t[6]=(m*r*n-h*M*n-m*i*o+s*M*o+h*i*d-s*r*d)*z,t[7]=(h*l*n-c*r*n+c*i*o-s*l*o-h*i*u+s*r*u)*z,t[8]=w*z,t[9]=(m*y*n-c*_*n-m*e*u+s*_*u+c*e*d-s*y*d)*z,t[10]=(h*_*n-m*a*n+m*e*o-s*_*o-h*e*d+s*a*d)*z,t[11]=(c*a*n-h*y*n-c*e*o+s*y*o+h*e*u-s*a*u)*z,t[12]=p*z,t[13]=(c*_*i-m*y*i+m*e*l-s*_*l-c*e*M+s*y*M)*z,t[14]=(m*a*i-h*_*i-m*e*r+s*_*r+h*e*M-s*a*M)*z,t[15]=(h*y*i-c*a*i+c*e*r-s*y*r-h*e*l+s*a*l)*z,this}scale(t){const s=this.elements,e=t.x,i=t.y,n=t.z;return s[0]*=e,s[4]*=i,s[8]*=n,s[1]*=e,s[5]*=i,s[9]*=n,s[2]*=e,s[6]*=i,s[10]*=n,s[3]*=e,s[7]*=i,s[11]*=n,this}getMaxScaleOnAxis(){const t=this.elements,s=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],e=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(s,e,i))}makeTranslation(t,s,e){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,s,0,0,1,e,0,0,0,1),this}makeRotationX(t){const s=Math.cos(t),e=Math.sin(t);return this.set(1,0,0,0,0,s,-e,0,0,e,s,0,0,0,0,1),this}makeRotationY(t){const s=Math.cos(t),e=Math.sin(t);return this.set(s,0,e,0,0,1,0,0,-e,0,s,0,0,0,0,1),this}makeRotationZ(t){const s=Math.cos(t),e=Math.sin(t);return this.set(s,-e,0,0,e,s,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,s){const e=Math.cos(s),i=Math.sin(s),n=1-e,h=t.x,a=t.y,r=t.z,o=n*h,c=n*a;return this.set(o*h+e,o*a-i*r,o*r+i*a,0,o*a+i*r,c*a+e,c*r-i*h,0,o*r-i*a,c*r+i*h,n*r*r+e,0,0,0,0,1),this}makeScale(t,s,e){return this.set(t,0,0,0,0,s,0,0,0,0,e,0,0,0,0,1),this}makeShear(t,s,e,i,n,h){return this.set(1,e,n,0,t,1,h,0,s,i,1,0,0,0,0,1),this}compose(t,s,e){const i=this.elements,n=s._x,h=s._y,a=s._z,r=s._w,o=n+n,c=h+h,y=a+a,l=n*o,u=n*c,m=n*y,_=h*c,M=h*y,d=a*y,f=r*o,g=r*c,w=r*y,p=e.x,b=e.y,z=e.z;return i[0]=(1-(_+d))*p,i[1]=(u+w)*p,i[2]=(m-g)*p,i[3]=0,i[4]=(u-w)*b,i[5]=(1-(l+d))*b,i[6]=(M+f)*b,i[7]=0,i[8]=(m+g)*z,i[9]=(M-f)*z,i[10]=(1-(l+_))*z,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,s,e){const i=this.elements;let n=v.set(i[0],i[1],i[2]).length();const h=v.set(i[4],i[5],i[6]).length(),a=v.set(i[8],i[9],i[10]).length();this.determinant()<0&&(n=-n),t.x=i[12],t.y=i[13],t.z=i[14],k.copy(this);const o=1/n,c=1/h,y=1/a;return k.elements[0]*=o,k.elements[1]*=o,k.elements[2]*=o,k.elements[4]*=c,k.elements[5]*=c,k.elements[6]*=c,k.elements[8]*=y,k.elements[9]*=y,k.elements[10]*=y,s.setFromRotationMatrix(k),e.x=n,e.y=h,e.z=a,this}makePerspective(t,s,e,i,n,h,a=Q){const r=this.elements,o=2*n/(s-t),c=2*n/(e-i),y=(s+t)/(s-t),l=(e+i)/(e-i);let u,m;if(a===Q)u=-(h+n)/(h-n),m=-2*h*n/(h-n);else if(a===rt)u=-h/(h-n),m=-h*n/(h-n);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return r[0]=o,r[4]=0,r[8]=y,r[12]=0,r[1]=0,r[5]=c,r[9]=l,r[13]=0,r[2]=0,r[6]=0,r[10]=u,r[14]=m,r[3]=0,r[7]=0,r[11]=-1,r[15]=0,this}makeOrthographic(t,s,e,i,n,h,a=Q){const r=this.elements,o=1/(s-t),c=1/(e-i),y=1/(h-n),l=(s+t)*o,u=(e+i)*c;let m,_;if(a===Q)m=(h+n)*y,_=-2*y;else if(a===rt)m=n*y,_=-1*y;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return r[0]=2*o,r[4]=0,r[8]=0,r[12]=-l,r[1]=0,r[5]=2*c,r[9]=0,r[13]=-u,r[2]=0,r[6]=0,r[10]=_,r[14]=-m,r[3]=0,r[7]=0,r[11]=0,r[15]=1,this}equals(t){const s=this.elements,e=t.elements;for(let i=0;i<16;i++)if(s[i]!==e[i])return!1;return!0}fromArray(t,s=0){for(let e=0;e<16;e++)this.elements[e]=t[e+s];return this}toArray(t=[],s=0){const e=this.elements;return t[s]=e[0],t[s+1]=e[1],t[s+2]=e[2],t[s+3]=e[3],t[s+4]=e[4],t[s+5]=e[5],t[s+6]=e[6],t[s+7]=e[7],t[s+8]=e[8],t[s+9]=e[9],t[s+10]=e[10],t[s+11]=e[11],t[s+12]=e[12],t[s+13]=e[13],t[s+14]=e[14],t[s+15]=e[15],t}}const v=new E,k=new T,pt=new E(0,0,0),ft=new E(1,1,1),O=new E,B=new E,S=new E,at=new T,lt=new ut;class G{constructor(t=0,s=0,e=0,i=G.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=s,this._z=e,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,s,e,i=this._order){return this._x=t,this._y=s,this._z=e,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,s=this._order,e=!0){const i=t.elements,n=i[0],h=i[4],a=i[8],r=i[1],o=i[5],c=i[9],y=i[2],l=i[6],u=i[10];switch(s){case"XYZ":this._y=Math.asin(P(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-c,u),this._z=Math.atan2(-h,n)):(this._x=Math.atan2(l,o),this._z=0);break;case"YXZ":this._x=Math.asin(-P(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(a,u),this._z=Math.atan2(r,o)):(this._y=Math.atan2(-y,n),this._z=0);break;case"ZXY":this._x=Math.asin(P(l,-1,1)),Math.abs(l)<.9999999?(this._y=Math.atan2(-y,u),this._z=Math.atan2(-h,o)):(this._y=0,this._z=Math.atan2(r,n));break;case"ZYX":this._y=Math.asin(-P(y,-1,1)),Math.abs(y)<.9999999?(this._x=Math.atan2(l,u),this._z=Math.atan2(r,n)):(this._x=0,this._z=Math.atan2(-h,o));break;case"YZX":this._z=Math.asin(P(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(-c,o),this._y=Math.atan2(-y,n)):(this._x=0,this._y=Math.atan2(a,u));break;case"XZY":this._z=Math.asin(-P(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(l,o),this._y=Math.atan2(a,n)):(this._x=Math.atan2(-c,u),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+s)}return this._order=s,e===!0&&this._onChangeCallback(),this}setFromQuaternion(t,s,e){return at.makeRotationFromQuaternion(t),this.setFromRotationMatrix(at,s,e)}setFromVector3(t,s=this._order){return this.set(t.x,t.y,t.z,s)}reorder(t){return lt.setFromEuler(this),this.setFromQuaternion(lt,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],s=0){return t[s]=this._x,t[s+1]=this._y,t[s+2]=this._z,t[s+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}G.DEFAULT_ORDER="XYZ";typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:ct}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=ct);var A;(x=>{x.DoDrawAsPolygon=!1,x.SimulationTimeStep=.01,x.Gravity=9.80665,x.MouseWheelSpeedFactor=.001,x.ParticleSolverLimit=1e3,x.speedLimit=5})(A||(A={}));function wt(x){return typeof x.affect=="function"}function bt(x){return typeof x.onClick=="function"}function J(x){return typeof x.getNormalsForCollision=="function"&&typeof x.getNormalsForCollision=="function"&&typeof x.getCenterPoint=="function"}function gt(x){return typeof x.visible=="boolean"&&typeof x.draw=="function"}function Ct(x){return typeof x.isHoveredOver=="boolean"&&typeof x.onUnHover=="function"&&typeof x.onHover=="function"}function St(x){return typeof x.mouseOnState=="boolean"&&typeof x.isMouseOn=="function"}function kt(x){return typeof x.isPressed=="boolean"&&typeof x.onPress=="function"&&typeof x.onUnpress=="function"}function Pt(x){return typeof x.applyVelocity=="function"&&typeof x.applyRotationSpeed=="function"&&typeof x.addVelocity=="function"&&typeof x.addRotationSpeed=="function"&&typeof x.IsSimulatable=="boolean"}function yt(x){return typeof x.move=="function"&&typeof x.rotate=="function"&&typeof x.rotation=="object"&&typeof x.position=="object"}function Et(x){return typeof x.update=="function"}class Ot{AllObjects=[];ClickableObjects=[];DrawableObjects=[];HoverableObjects=[];PressableObjects=[];TransformableObjects=[];MouseReactiveObjects=[];UpdatableObjects=[];SimulatableObjects=[];AffectorObject=[];CollidableObjects=[];addCollider(t){this.CollidableObjects.push(t)}addObject(t){this.AllObjects.push(t),bt(t)&&this.ClickableObjects.push(t),gt(t)&&this.DrawableObjects.push(t),Ct(t)&&this.HoverableObjects.push(t),kt(t)&&this.PressableObjects.push(t),yt(t)&&this.TransformableObjects.push(t),St(t)&&this.MouseReactiveObjects.push(t),Et(t)&&this.UpdatableObjects.push(t),Pt(t)&&this.SimulatableObjects.push(t),wt(t)&&this.AffectorObject.push(t),J(t)&&this.CollidableObjects.push(t)}}var R=(x=>(x[x.LEFTCLICK=0]="LEFTCLICK",x[x.PRESS=1]="PRESS",x[x.UNPRESS=2]="UNPRESS",x))(R||{});class Rt{_canvas;mousePosition=new C(0,0);mouseDelta=new C(0,0);scrollDelta=0;events=[];leftClick=!1;leftPress=!1;constructor(t){this._canvas=t}getMousePostion(){const t=this.mousePosition;return new C(t.x,t.y)}getMouseDelta(){return this.mouseDelta}getScrollDelta(){return this.scrollDelta}updateMousePosition(t){const s=this._canvas.getBoundingClientRect(),e=t.clientX-s.left,i=t.clientY-s.top;this.mouseDelta.x+=e-this.mousePosition.x,this.mouseDelta.y+=i-this.mousePosition.y,this.mousePosition.x=e,this.mousePosition.y=i}updateMouseWheel(t){this.scrollDelta+=t.deltaY*A.MouseWheelSpeedFactor,console.log("this. scrollDelta: "+this.scrollDelta)}clerEvents(){this.mouseDelta.x=0,this.mouseDelta.y=0,this.leftClick=!1,this.scrollDelta=0}addEvent(t){this.events.push(t)}getMouseClicked(){return this.leftPress}}var tt;(x=>{function t(l,u,m,_,M="white"){l.fillStyle=M,l.beginPath(),l.arc(u,m,_,0,2*Math.PI),l.fill()}x.drawCircle=t;function s(l,u,m,_,M,d=3,f="white"){l.beginPath(),l.moveTo(u,m),l.lineTo(_,M),l.lineWidth=d,l.strokeStyle=f,l.lineCap="round",l.stroke()}x.drawLine=s;function e(l,u,m=3,_="white",M=!1){if(u.length<2)throw"lines should have at least 2 points";l.beginPath(),l.moveTo(u[0].x,u[0].y);for(let d=1;d<u.length;d++)l.lineTo(u[d].x,u[d].y);M||l.lineTo(u[0].x,u[0].y),l.lineWidth=m,l.strokeStyle=_,l.lineCap="round",l.stroke()}x.drawLines=e;function i(l,u,m="white"){if(u.length<3)throw"shape should have at least 3 points";l.beginPath(),l.moveTo(u[0].x,u[0].y);for(let _=1;_<u.length;_++)l.lineTo(u[_].x,u[_].y);l.fillStyle=m,l.fill()}x.drawShape=i;function n(l){const u=[];for(let m=0;m<l.length;m++){const _=new C(l[m%l.length].x,l[m%l.length].y),M=new C(l[(m+1)%l.length].x,l[(m+1)%l.length].y),d=_.sub(M),f=new C(d.y,-d.x).normalize();u.push(f.normalize())}return u}x.getNormalsOfConnectedPoints=n;let h=0;function a(l,u){const _=u.normalize().dot(l);return h--<6&&u.x!==0&&u.y!==0&&(h=1e3),_}x.castPointOnAxis=a;function r(l,u){let m=Number.MIN_VALUE,_=Number.MAX_VALUE;return l.forEach(M=>{const d=a(M,u);m=m<d?d:m,_=_>d?d:_}),{min:_,max:m}}x.getMinMaxOfPointsOnAxis=r;function o(l,u){if(l.min<u.max&&u.min<l.max){const m=Math.max(l.min,u.min);return Math.min(l.max,u.max)-m}else return 0}x.getMinMaxOverlapLength=o;function c(l){return Math.atan2(l.y,l.x)}x.getRotationFromVector=c;function y(l){return new C(l.y,-l.x).normalize()}x.getNormalOfVector=y})(tt||(tt={}));var st;(x=>{function t(i,n){if(n.length<3)throw"amount of points houdl be at least 3";const h=[...n,n[0]],a=h.length;let r=!1;for(let o=0;o<a-1;o++){const c=h[o],y=h[o+1];i.y<c.y!=i.y<y.y&&i.x<(y.x-c.x)*(i.y-c.y)/(y.y-c.y)+c.x&&(r=!r)}return r}x.isPointWithinShape=t;function s(i,n,h){return i.distanceTo(n)<h}x.isPointWithinCirlce=s;function e(i,n){const h=i.getNormalsForCollision().concat(n.getNormalsForCollision());let a=Number.MAX_VALUE,r=new C;for(let l=0;l<h.length;l++){const u=h[l],m=i.castObjectOntoNormal(u),_=n.castObjectOntoNormal(u),M=tt.getMinMaxOverlapLength(m,_);if(M===0)return null;a>M&&(a=M,r=new C(h[l].x*M,h[l].y*M))}const o=i.getCenterPoint(),c=n.getCenterPoint(),y=o.sub(c);return y.x<0&&r.x>0&&(r=new C(-r.x,r.y)),y.y<0&&r.y>0&&(r=new C(r.x,-r.y)),r}x.SasCollision=e})(st||(st={}));class vt{_game;constructor(t){this._game=t}simulate(){this._game._objectReferenceController.SimulatableObjects.forEach(t=>{t.IsSimulatable&&(this.applyAffectors(t),this.applyVelocity(t),this.resolveCollsions(t))})}applyAffectors(t){this._game._objectReferenceController.AffectorObject.forEach(s=>{s.affect(t)})}applyVelocity(t){t.applyVelocity(),t.applyRotationSpeed()}applyGravity(t){this.applyForce(t,new C(0,A.Gravity),A.SimulationTimeStep)}applyForce(t,s,e){t.addVelocity(s.multiply(new C(e,e)))}resolveCollsions(t){J(t)&&this._game._objectReferenceController.CollidableObjects.forEach(s=>{if(t!==s){const e=J(s),i=st.SasCollision(t,s);i&&(yt(t)&&t.move(i),t.modifyVelocity(n=>{const h=e?n.length()/2:n.length();return i.clone().normalize().multiplyScalar(h)}))}})}}class Ft{_ctx;_canvas;_objectReferenceController=new Ot;_MouseController;_SimulationController=new vt(this);dt=0;time=0;getWidthAndHeightOfCanvas(){return new C(this._canvas.width,this._canvas.height)}init(t,s="grey"){try{this._canvas=t,this._ctx=t.getContext("2d"),this._MouseController=new Rt(this._canvas),this.setupEvent(),requestAnimationFrame(this.gameLoop.bind(this)),this.clearEvents()}catch(e){console.error("Error intlizing game: "+e)}}gameLoop(){this.resolveEvents(),this._SimulationController.simulate(),this.update(),this.drawBackground(),this.drawObjects(),requestAnimationFrame(this.gameLoop.bind(this)),this.clearEvents()}setupEvent(){this._canvas.addEventListener("mousemove",t=>{this.updateOnMouseMove(t)}),this._canvas.addEventListener("click",t=>{this.updateOnClick(t)}),this._canvas.addEventListener("mouseup",t=>{this.onMouseUp(t)}),this._canvas.addEventListener("mousedown",t=>{this.onMouseDown(t)}),this._canvas.addEventListener("wheel",t=>{this.onMouseScroll(t)})}onMouseScroll(t){this._MouseController.updateMouseWheel(t)}onMouseDown(t){this._MouseController.addEvent(R.PRESS),this._MouseController.leftPress=!0}onMouseUp(t){this._MouseController.addEvent(R.UNPRESS),this._MouseController.leftPress=!1}updateOnMouseMove(t){this._MouseController.updateMousePosition(t)}updateOnClick(t){this._MouseController.addEvent(R.LEFTCLICK)}resolveEvents(){this.updateHoverable();let t;for(;(t=this._MouseController.events.shift())&&t!==void 0;)switch(t){case R.LEFTCLICK:this.updateClickable();break;case R.PRESS:this.updatePressableOnPress();break;case R.UNPRESS:this.updatePressableOnUnPress();break}}clearEvents(){this._MouseController.clerEvents();const t=new Date().getTime();this.dt=(t-this.time)/1e3,this.time=t}updatePressableOnPress(){const t=this._objectReferenceController.PressableObjects.filter(s=>s.mouseOnState);t.length>0&&(t[0].onPress(),t[0].isPressed=!0)}updatePressableOnUnPress(){this._objectReferenceController.PressableObjects.filter(t=>t.isPressed).forEach(t=>{t.onUnpress(),t.isPressed=!1})}updateMouseOnObject(){const t=this._MouseController.getMousePostion();this._objectReferenceController.MouseReactiveObjects.forEach(s=>{s.mouseOnState=s.isMouseOn(t)})}updateHoverable(){this._objectReferenceController.HoverableObjects.forEach(t=>{const s=t.mouseOnState;s?t.isHoveredOver||t.onHover():t.isHoveredOver&&t.onUnHover(),t.isHoveredOver=s})}updateClickable(){for(const t of this._objectReferenceController.ClickableObjects)if(t.mouseOnState){t.onClick();return}}update(){this.updateMouseOnObject(),this.updateHoverable(),this.updateObjects()}updateObjects(){this._objectReferenceController.UpdatableObjects.forEach(t=>t.update(this.dt))}updateMousePosition(){}drawableElements=[];drawBackground(){this._ctx.fillStyle="black",this._ctx.fillRect(0,0,this._ctx.canvas.width,this._ctx.canvas.height),this._ctx.fill()}drawObjects(){this._objectReferenceController.DrawableObjects.forEach(t=>{t.draw(this._ctx)})}addObject(t){this._objectReferenceController.addObject(t),t.game=this}}var et;(x=>{function t(h,a,r,o,c="white"){h.fillStyle=c,h.lineWidth=0,h.beginPath(),h.arc(a,r,o/2,0,2*Math.PI),h.fill()}x.drawCircle=t;function s(h,a,r,o,c,y=3,l="white"){h.beginPath(),h.moveTo(a,r),h.lineTo(o,c),h.lineWidth=y,h.strokeStyle=l,h.lineCap="round",h.stroke()}x.drawLine=s;function e(h,a,r=3,o="white",c=!1){if(a.length<2)throw"lines should have at least 2 points";h.beginPath(),h.moveTo(a[0].x,a[0].y);for(let y=1;y<a.length;y++)h.lineTo(a[y].x,a[y].y);c||h.lineTo(a[0].x,a[0].y),h.lineWidth=r,h.strokeStyle=o,h.lineCap="round",h.stroke()}x.drawLines=e;function i(h,a,r,o=2,c="white"){h.beginPath(),h.moveTo(a.x,a.y),h.lineTo(r.x,r.y),h.strokeStyle=c,h.lineWidth=o,h.lineCap="round",h.stroke()}x.DrawLine=i;function n(h,a,r="white"){if(a.length<3)throw"shape should have at least 3 points";h.beginPath(),h.moveTo(a[0].x,a[0].y);for(let o=1;o<a.length;o++)h.lineTo(a[o].x,a[o].y);h.fillStyle=r,h.fill()}x.drawShape=n})(et||(et={}));class Lt extends zt{_color;constructor(t,s=3,e="white"){if(!t)throw"position cannont be undefind";super(),this.position=t,this._radius=s,this._color=e}rotate(t){}position;rotation=new G;_radius=1;visible=!0;move(t){this.position.add(t)}draw(t){et.drawCircle(t,this.position.x,this.position.y,this._radius,this._color)}}const Tt=["id"],Vt=mt({__name:"GameComponent",props:{game:{},id:{}},setup(x){const t=x,s=_t(null);xt(()=>{}),dt(s,()=>{t.game&&s.value&&(e(),t.game.init(s.value))});function e(){s.value&&(s.value.width=s.value.clientWidth,s.value.height=s.value.clientHeight)}return window.addEventListener("resize",e),(i,n)=>(ht(),nt("div",null,[t.game&&t.id?(ht(),nt("canvas",{key:0,id:t.id,ref_key:"canvasRef",ref:s},null,8,Tt)):Mt("",!0)]))}});export{st as A,tt as C,et as D,zt as G,it as M,Lt as P,C as V,Vt as _,Ft as a,A as b};
